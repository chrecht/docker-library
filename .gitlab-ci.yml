image: docker:stable

services:
  - name: docker:dind
    alias: dockerdaemon

stages: 
  - build

variables:
  DOCKER_HOST: tcp://dockerdaemon:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

before_script:
  - apk --update add curl
  - |
    export MAJOR=$(curl --silent https://packages.sury.org/php/dists/bullseye/main/binary-amd64/Packages | grep "Package: php8.2-cli$" -A 5 | grep Version | sed -En  's/^Version: ([0-9]+\.[0-9]+).*/\1/p')
    export MINOR=$(curl --silent https://packages.sury.org/php/dists/bullseye/main/binary-amd64/Packages | grep "Package: php8.2-cli$" -A 5 | grep Version | sed -En  's/^Version: [0-9]+\.[0-9]+\.([0-9]+).*/\1/p')
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

scheduled-docker-build:
  stage: build
  image: debian:latest
  script:
    - 'apt update && apt install curl jq git -y'
    - ./check-version-and-create-tag.sh
#  rules:
#    - if: $CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_REF_PROTECTED


build-8.2-apache:
  stage: build
  variables:
    VARIANT: apache
  only:
    - tags
  cache:
    key: $MAJOR.$MINOR-$VARIANT
  script:
    - |
        docker build --platform=linux/amd64 --pull \
          -t $CI_REGISTRY_IMAGE/php:$MAJOR.$MINOR-$VARIANT \
          -t $CI_REGISTRY_IMAGE/php:$MAJOR-$VARIANT \
          -f ./php/8.2/apache/Dockerfile ./php/8.2/apache
    - docker push $CI_REGISTRY_IMAGE/php:$MAJOR.$MINOR-$VARIANT
    - docker push $CI_REGISTRY_IMAGE/php:$MAJOR-$VARIANT

build-8.2-cli:
  stage: build
  only:
    - tags
  variables:
    VARIANT: cli
  cache:
    key: $MAJOR.$MINOR-$VARIANT
  script:
    - |
        docker build --platform=linux/amd64 --pull \
          -t $CI_REGISTRY_IMAGE/php:$MAJOR.$MINOR-$VARIANT \
          -t $CI_REGISTRY_IMAGE/php:$MAJOR-$VARIANT \
          -f ./php/8.2/cli/Dockerfile ./php/8.2/cli
    - docker push $CI_REGISTRY_IMAGE/php:$MAJOR.$MINOR-$VARIANT
    - docker push $CI_REGISTRY_IMAGE/php:$MAJOR-$VARIANT


# # test:
# #   stage: test
# #   image:
# #     name: bitnami/kubectl:latest
# #     entrypoint: [""]
# #   script:
# #     - kubectl config use-context $KUBE_CONTEXT
# #     - kubectl get pods -A
# #     - kubectl get nodes -o wide

