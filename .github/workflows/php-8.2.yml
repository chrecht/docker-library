name: Build & Push

on:
  push:
    tags:
      - "v8.2.*"
  workflow_dispatch:

jobs:

  docker-apache:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Get version
        id: get_version
        run: |
          SEARCH_MAJOR=8.2
          latest=$(curl --silent https://packages.sury.org/php/dists/bullseye/main/binary-amd64/Packages | grep "Package: php${SEARCH_MAJOR}-cli$" -A 5 | grep Version | sed -En  's/^Version: ([0-9]+\.[0-9]+\.[0-9]+).*/\1/p')
          ver_major=$(echo $latest | sed -En 's/^([0-9]+)\.[0-9]+\.[0-9]+/\1/p')
          ver_minor=$(echo $latest | sed -En 's/^[0-9]+\.([0-9]+)\.[0-9]+/\1/p')
          ver_patch=$(echo $latest | sed -En 's/^[0-9]+\.[0-9]+\.([0-9]+)/\1/p')

          echo "::set-output name=VERSION::$latest"
          echo "::set-output name=MAJOR::$ver_major"
          echo "::set-output name=MINOR::$ver_minor"
          echo "::set-output name=PATCH::$ver_patch"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/chrecht/docker-library/php
          tags: |
            type=semver,pattern={{ steps.get_version.outputs.VERSION }},suffix=-apache,latest=false
            type=semver,pattern={{ steps.get_version.outputs.MAJOR }}.{{ steps.get_version.outputs.MINOR }},suffix=-apache,latest=false
          flavor: |
            latest=false

      - name: Login to image repository
        if: github.ref_type == 'tag'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./php/8.2/apache
          file: ./php/8.2/apache/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # docker-cli:

  #   runs-on: ubuntu-latest

  #   steps:

  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ghcr.io/chrecht/docker-library/php
  #         tags: |
  #           type=semver,pattern={{version}},suffix=-cli,latest=false
  #           type=semver,pattern={{major}}.{{minor}},suffix=-cli,latest=false
  #         flavor: |
  #           latest=false
  #     - name: Login to image repository
  #       if: github.ref_type == 'tag'
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GHCR_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./php/8.2/cli
  #         file: ./php/8.2/cli/Dockerfile
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}

  # docker-fpm:

  #   runs-on: ubuntu-latest

  #   steps:

  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ghcr.io/chrecht/docker-library/php
  #         tags: |
  #           type=semver,pattern={{version}},suffix=-fpm,latest=false
  #           type=semver,pattern={{major}}.{{minor}},suffix=-fpm,latest=false
  #         flavor: |
  #           latest=false
  #     - name: Login to image repository
  #       if: github.ref_type == 'tag'
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GHCR_TOKEN }}

  #     - name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: ./php/8.2/fpm
  #         file: ./php/8.2/fpm/Dockerfile
  #         push: ${{ github.event_name != 'pull_request' }}
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
